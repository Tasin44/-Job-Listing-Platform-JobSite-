# Generated by Django 5.2.1 on 2025-06-17 05:08

import dirtyfields.dirtyfields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this model instance.', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the instance was last updated.')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DELETED', 'Deleted'), ('DRAFT', 'Draft'), ('REMOVED', 'Removed')], default='ACTIVE', help_text='Status of the instance, typically used for soft deletion.', max_length=20)),
                ('unique_job_id', models.CharField(db_index=True, help_text='Unique identifier for the job posting', max_length=20, unique=True)),
                ('title', models.CharField(help_text='Job title', max_length=200)),
                ('description', models.TextField(help_text='Detailed job description')),
                ('requirements', models.TextField(blank=True, help_text='Job requirements and qualifications')),
                ('location', models.CharField(help_text='Job location (city/remote/hybrid)', max_length=200)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum salary range', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum salary range', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('job_type', models.CharField(default='Full-time', help_text='Employment type (Full-time, Part-time, Contract, etc.)', max_length=50)),
                ('experience_level', models.CharField(default='Mid-level', help_text='Required experience level', max_length=50)),
                ('skills_required', models.TextField(blank=True, help_text='Comma-separated list of required skills')),
                ('deadline', models.DateTimeField(help_text='Application deadline')),
                ('job_status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('CLOSED', 'Closed'), ('CANCELLED', 'Cancelled')], default='PUBLISHED', help_text='Current status of the job posting', max_length=20)),
                ('total_applications', models.PositiveIntegerField(default=0, help_text='Total number of applications received')),
                ('recruiter', models.ForeignKey(help_text='Recruiter who posted this job', on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'db_table': 'jobs',
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this model instance.', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp indicating when the instance was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp indicating when the instance was last updated.')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DELETED', 'Deleted'), ('DRAFT', 'Draft'), ('REMOVED', 'Removed')], default='ACTIVE', help_text='Status of the instance, typically used for soft deletion.', max_length=20)),
                ('cover_letter', models.TextField(blank=True, help_text='Cover letter from the candidate')),
                ('resume', models.FileField(blank=True, help_text='Resume file uploaded for this application', upload_to='application_resumes/')),
                ('application_status', models.CharField(choices=[('PENDING', 'Pending Review'), ('REVIEWING', 'Under Review'), ('SHORTLISTED', 'Shortlisted'), ('INTERVIEW_SCHEDULED', 'Interview Scheduled'), ('ACCEPTED', 'Accepted/Hired'), ('REJECTED', 'Rejected'), ('WITHDRAWN', 'Withdrawn by Candidate')], default='PENDING', help_text='Current status of the application', max_length=20)),
                ('recruiter_notes', models.TextField(blank=True, help_text='Notes from the recruiter about this application')),
                ('interview_scheduled_at', models.DateTimeField(blank=True, help_text='Scheduled interview date and time', null=True)),
                ('candidate', models.ForeignKey(help_text='Candidate applying for the job', on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(help_text='Job being applied to', on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='job.job')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'db_table': 'job_applications',
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['unique_job_id'], name='jobs_unique__80dabf_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['recruiter', 'job_status'], name='jobs_recruit_022c49_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['deadline'], name='jobs_deadlin_0e940b_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job', 'application_status'], name='job_applica_job_id_42317a_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['candidate', 'application_status'], name='job_applica_candida_2f8ad4_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['created_at'], name='job_applica_created_f3e88d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobapplication',
            unique_together={('job', 'candidate')},
        ),
    ]
